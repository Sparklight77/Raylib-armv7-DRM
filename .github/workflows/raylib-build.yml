name: Cross-Build Raylib ARMv7 + ARM64 (DRM + X11)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-raylib:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [armv7, arm64]
        include:
          - arch: armv7
            toolchain: Toolchain-armv7-linux-gnueabihf.cmake
            triple: arm-linux-gnueabihf
          - arch: arm64
            toolchain: Toolchain-aarch64-linux-gnu.cmake
            triple: aarch64-linux-gnu

    name: Build raylib DRM + X11 for ${{ matrix.arch }}
    steps:
      - name: Checkout this repo (toolchain files)
        uses: actions/checkout@v4

      - name: Clone raylib (shallow)
        run: git clone --depth 1 https://github.com/raysan5/raylib.git

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake ninja-build git tar \
            gcc-${{ matrix.triple }} g++-${{ matrix.triple }} \
            libdrm-dev libgbm-dev libinput-dev libgles2-mesa-dev \
            libx11-dev libxrandr-dev libxcursor-dev libxi-dev libxinerama-dev libxext-dev

      - name: Build DRM version
        run: |
          mkdir build-${{ matrix.arch }}-drm
          cd build-${{ matrix.arch }}-drm
          cmake ../raylib \
            -DCMAKE_TOOLCHAIN_FILE=../cmake/${{ matrix.toolchain }} \
            -DCMAKE_BUILD_TYPE=Release \
            -DPLATFORM=DRM \
            -DUSE_OPENGL_ES=ON \
            -DBUILD_SHARED_LIBS=OFF \
            -DBUILD_EXAMPLES=OFF \
            -DBUILD_GAMES=OFF \
            -G Ninja
          ninja

      - name: Build X11 version
        run: |
          mkdir build-${{ matrix.arch }}-x11
          cd build-${{ matrix.arch }}-x11
          cmake ../raylib \
            -DCMAKE_TOOLCHAIN_FILE=../cmake/${{ matrix.toolchain }} \
            -DCMAKE_BUILD_TYPE=Release \
            -DPLATFORM=Desktop \
            -DBUILD_SHARED_LIBS=OFF \
            -DBUILD_EXAMPLES=OFF \
            -DBUILD_GAMES=OFF \
            -G Ninja
          ninja

      - name: Prepare SDK package
        run: |
          mkdir -p raylib-${{ matrix.arch }}-DRM/include
          mkdir -p raylib-${{ matrix.arch }}-DRM/lib
          cp -r raylib/src/*.h raylib-${{ matrix.arch }}-DRM/include/
          cp build-${{ matrix.arch }}-drm/raylib/libraylib.a raylib-${{ matrix.arch }}-DRM/lib/

          mkdir -p raylib-${{ matrix.arch }}-X11/include
          mkdir -p raylib-${{ matrix.arch }}-X11/lib
          cp -r raylib/src/*.h raylib-${{ matrix.arch }}-X11/include/
          cp build-${{ matrix.arch }}-x11/raylib/libraylib.a raylib-${{ matrix.arch }}-X11/lib/

          DATE=$(date +"%d-%m-%Y")
          FILENAME="Raylib-${{ matrix.arch }}-DRM+X11 (${DATE}).tar.gz"
          tar -czf "$FILENAME" raylib-${{ matrix.arch }}-DRM raylib-${{ matrix.arch }}-X11
          echo "SDK_FILENAME=$FILENAME" >> $GITHUB_ENV

      - name: Upload SDK artifact
        uses: actions/upload-artifact@v4
        with:
          name: Raylib-${{ matrix.arch }} SDK (DRM + X11)
          path: ${{ env.SDK_FILENAME }}
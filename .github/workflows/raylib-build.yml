name: Cross-Build Raylib ARMv7 + ARM64 (DRM & DESKTOP)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-raylib:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [armv7, arm64]
        platform: [PLATFORM_DRM, PLATFORM_DESKTOP]
        include:
          - arch: armv7
            toolchain: Toolchain-armv7-linux-gnueabihf.cmake
            triple: arm-linux-gnueabihf
          - arch: arm64
            toolchain: Toolchain-aarch64-linux-gnu.cmake
            triple: aarch64-linux-gnu

    name: Build raylib for ${{ matrix.arch }}-${{ matrix.platform }}
    steps:
      - name: Checkout this repo (toolchain files)
        uses: actions/checkout@v4

      - name: Clone raylib (shallow)
        run: git clone --depth 1 https://github.com/raysan5/raylib.git

      - name: Install dependencies + fetch libx11 manually
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake ninja-build git tar \
            gcc-${{ matrix.triple }} g++-${{ matrix.triple }} \
            libdrm-dev libgbm-dev libinput-dev libgles2-mesa-dev \
            dpkg-dev wget

          ARCH=${{ matrix.arch }}
          if [ "$ARCH" = "armv7" ]; then
            LIBX11_URL="http://ports.ubuntu.com/pool/main/libx/libx11/libx11-dev_1.8.4-2ubuntu1_armhf.deb"
          elif [ "$ARCH" = "arm64" ]; then
            LIBX11_URL="http://ports.ubuntu.com/pool/main/libx/libx11/libx11-dev_1.8.4-2ubuntu1_arm64.deb"
          fi

          mkdir -p x11libs
          wget -q $LIBX11_URL -O libx11.deb
          dpkg-deb -x libx11.deb x11libs

          echo "CMAKE_INCLUDE_PATH=$(pwd)/x11libs/usr/include" >> $GITHUB_ENV
          echo "CMAKE_LIBRARY_PATH=$(pwd)/x11libs/usr/lib/${{ matrix.triple }}" >> $GITHUB_ENV

      - name: Build raylib for ${{ matrix.arch }}-${{ matrix.platform }}
        run: |
          BUILD_DIR=build-${{ matrix.arch }}-${{ matrix.platform }}
          mkdir $BUILD_DIR
          cd $BUILD_DIR

          PLATFORM_FLAGS="-DPLATFORM=${{ matrix.platform }}"
          if [ "${{ matrix.platform }}" = "PLATFORM_DRM" ]; then
            PLATFORM_FLAGS="$PLATFORM_FLAGS -DUSE_OPENGL_ES=ON"
          fi

          cmake ../raylib \
            -DCMAKE_TOOLCHAIN_FILE=../cmake/${{ matrix.toolchain }} \
            -DCMAKE_BUILD_TYPE=Release \
            $PLATFORM_FLAGS \
            -DCMAKE_INCLUDE_PATH="$CMAKE_INCLUDE_PATH" \
            -DCMAKE_LIBRARY_PATH="$CMAKE_LIBRARY_PATH" \
            -DBUILD_SHARED_LIBS=OFF \
            -DBUILD_EXAMPLES=OFF \
            -DBUILD_GAMES=OFF \
            -G Ninja
          ninja

      - name: Prepare SDK package
        run: |
          PLATFORM_LOWER=$(echo "${{ matrix.platform }}" | tr '[:upper:]' '[:lower:]' | sed 's/platform_//')
          SDK_DIR=raylib-${{ matrix.arch }}-${PLATFORM_LOWER}
          mkdir -p $SDK_DIR/include
          mkdir -p $SDK_DIR/lib
          cp -r raylib/src/*.h $SDK_DIR/include/
          cp build-${{ matrix.arch }}-${{ matrix.platform }}/raylib/libraylib.a $SDK_DIR/lib/
          DATE=$(date +"%d-%m-%Y")
          FILENAME="${SDK_DIR}-${DATE}.tar.gz"
          tar -czf "$FILENAME" $SDK_DIR
          echo "SDK_FILENAME=$FILENAME" >> $GITHUB_ENV

      - name: Upload SDK artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SDK_FILENAME }}
          path: ${{ env.SDK_FILENAME }}